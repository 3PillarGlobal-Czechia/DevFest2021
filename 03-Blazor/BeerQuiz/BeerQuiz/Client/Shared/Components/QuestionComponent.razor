@if(CurrentQuestion != null)
{
    <div class="card rounded shadow">
        <div class="card-header">
            <h3>
                @CurrentQuestion.Question
            </h3>            
        </div>
        <div class="card-footer">
            @foreach(var answer in CurrentQuestion.Options)
            {
                string btnClass = DisableAnswers && answer == correctAnswer ? "btn-success" : "btn-primary";
                <button class="btn btn-lg @btnClass mx-2" disabled="@DisableAnswers" @onclick="@(async _ => await SelectAnswer(answer))">@answer</button>
            }
        </div>
    </div>
}

@code {
    [Parameter]
    public QuizItem? CurrentQuestion { get; set; }
    [Parameter]
    public EventCallback AnswerSelected { get; set; }
    [Parameter]
    public bool DisableAnswers { get; set; } 
    private string? correctAnswer;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        correctAnswer = CurrentQuestion?.GetAnswerString();
    }

    private async Task SelectAnswer(string answer)
    {
        if(answer == correctAnswer)
        {

        }
        else
        {

        }
        if (AnswerSelected.HasDelegate)
        {
            await AnswerSelected.InvokeAsync();
        }
    }
}
